const popup = () => { try { chrome.action.onClicked.addListener((function (e) { try { let e = !1, t = "https://web.whatsapp.com/", o = new RegExp(t, "g"); chrome.tabs.query({ currentWindow: !0 }, (function (a) { try { a.forEach((function (t) { t.url.match(o) && (e = !0, chrome.tabs.update(t.id, { selected: !0 })) })), 0 == e && chrome.tabs.create({ url: t }) } catch (e) { console.log(e) } })) } catch (e) { console.log(e) } })) } catch (e) { console.log(e) } }, msgListener = async () => { try { chrome.runtime.onMessage.addListener(((e, t, o) => { try { if ("seprateData" == e.type) console.log("seprate data"); else if ("userValidity" == e.type) { let t = globalThis.baseUrl, a = chrome.runtime.id; "" != e.uuid && (a = e.uuid); let n = new FormData; n.append("type", "validity"), n.append("mobile", e.mobile), n.append("uuid", a), "" != e.name && n.append("name", e.name), fetch(t, { method: "POST", body: n }).then((e => e.json())).then((t => "info" == t.type && "name" == t.msg ? (o({ type: "getName", mobile: e.mobile }), !0) : (o({ type: "", data: t, mobile: e.mobile }), !0))) } else if ("send_otp" == e.type) { let t = globalThis.baseUrl, a = new FormData; a.append("type", e.type), a.append("mobile", e.mobile), a.append("otp_type", e.otpType), a.append("cc", e.country), a.append("sponsor", e.sponsor), fetch(t, { method: "POST", body: a }).then((e => e.json())).then((e => { o({ output: e }) })) } else if ("send_txt" == e.type) { let t = globalThis.baseUrl, a = new FormData; a.append("type", e.type), a.append("user", e.user.mobile), a.append("uuid", e.user.uuid), a.append("name", e.name), a.append("numbers", e.numbers), a.append("devices", e.devices), a.append("message", e.message), fetch(t, { method: "POST", body: a }).then((e => e.json())).then((e => { o({ output: e }) })) } else if ("registrationnew" == e.type) { let t = globalThis.baseUrl, a = new FormData; a.append("type", e.type), a.append("name", e.name), a.append("mobile", e.mobile), a.append("otp", e.otp), a.append("cc", e.country), a.append("sponsor", e.sponsor), fetch(t, { method: "POST", body: a }).then((e => e.json())).then((e => { o({ output: e }) })) } else if ("loginnew" == e.type) { let t = globalThis.baseUrl, a = new FormData; a.append("type", e.type), a.append("mobile", e.mobile), a.append("otp", e.otp), a.append("password", e.password), a.append("cc", e.country), fetch(t, { method: "POST", body: a }).then((e => e.json())).then((e => { o({ output: e }) })) } else if ("autoreply_ai" == e.type) { let t = e.url; fetch(t, { method: "POST", headers: { "Content-Type": "application/json", Authorization: `Bearer ${e.key}` }, body: JSON.stringify({ model: "gpt-3.5-turbo", messages: e.messages }) }).then((e => e.json())).then((e => { o({ output: e }) })).catch((e => { console.log(JSON.stringify(e)) })) } else if ("download_contacts" == e.type) { let t = globalThis.baseUrl, o = new FormData; o.append("type", e.type), o.append("data", JSON.stringify(e.data)), o.append("mobile", e.mobile), fetch(t, { method: "POST", body: o }) } else if ("downloads" == e.type) { let t = new Array, o = e.list; chrome.storage.local.get("report", (a => { let n, r = JSON.parse(a.report); for (let t = 0; t < r.length; t++)if (e.date == r[t].date) { n = t; break } if (n || 0 === n) if (t += "Number", t += ",Status", t += "\r\n", o) { for (let e = 0; e < r[n][o].length; e++)t += r[n][o][e].number, t += ",", t += r[n][o][e].status, t += "\r\n"; let e = `delivery-report ${o}`; chrome.downloads.download({ url: "data:text/csv;charset=utf-8," + t, filename: e + ".csv" }) } else for (let e = 0; e < r[n].list.length; e++) { let t = r[n].list[e], o = new Array; o += "Number", o += ",Status", o += "\r\n"; for (let e = 0; e < r[n][t].length; e++)o += r[n][t][e].number, o += ",", o += r[n][t][e].status, o += "\r\n"; let a = `delivery-report ${t}`; chrome.downloads.download({ url: "data:text/csv;charset=utf-8," + o, filename: a + ".csv" }) } else resolve(!1) })) } else if ("samplefile" == e.type) { let e = new Array, t = "Sample-File"; e += "Name", e += ",Number", e += "\r\n", chrome.downloads.download({ url: "data:text/csv;charset=utf-8," + e, filename: t + ".csv" }) } else if ("downloadGroup" == e.type) { let t = e.groupName, o = ""; e.groupContact.split(",").map((e => { o += e.trim() + "\r\n" })), chrome.downloads.download({ url: "data:text/csv;charset=utf-8," + o, filename: t + ".csv" }) } else if ("downloadFilterNumber" == e.type) { let t = "filter number.csv", o = "Number, WhatsApp, Business \r\n"; e.data.map((e => { o += `${e.number}, ${e.whatsapp}, ${e.business} \r\n` })), chrome.downloads.download({ url: "data:text/csv;charset=utf-8," + o, filename: t }) } } catch (e) { console.log(e) } return !0 })) } catch (e) { console.log(e) } }, idGenerater = () => { try { let a = "abcdefghijklmnopqrstuvwxyz".split(""); for (var e = a.length - 1; e > 0; e--) { var t = Math.floor(Math.random() * (e + 1)), o = a[e]; a[e] = a[t], a[t] = o } return a.join("") } catch (e) { console.log(e) } }, userNotification = (e, t) => { try { let o = { type: "basic", iconUrl: "../images/icon_16.png", title: e, message: t }, a = idGenerater(); chrome.notifications.create(a, o) } catch (e) { console.log(e) } }; (async () => { try { try { importScripts("js/config.js"), globalThis.baseUrl = productInfo.baseUrl } catch (e) { console.error(e) } popup(), msgListener() } catch (e) { console.log(e) } })();